# symbols for qandl are often specified by
# exchange and symble.  GOOG becomes NASDAQ_GOOG
# and MMM becomes NYSE_MMM
symbol = params[:symbol]
months_ago = params[:months].to_i

# if you have a quandl api key, put it here
# and the code will use it, otherwise you are limited to 50
# requests per day
# http://help.quandl.com/article/68-is-there-a-rate-limit-or-speed-limit-for-api-usage
quandl_api_key = nil

Struct.new("Price",:date,:open,:high,:low,:close,:volume)

url_string = "https://www.quandl.com/api/v1/datasets/GOOG/#{symbol}.json"
options = { "sort_order" => "asc",
            "trim_start" => months_ago.months.ago.to_s,
            "trim_end" => Date.today.to_s }

options["api_key"] = quandl_api_key unless quandl_api_key.nil?

result = JSON.parse(HttpClient.request(url_string, :query => options).body)

{ "name" => result["name"],
  "description" => result["description"],
  "prices" => result["data"].map {|data_row|
    # We need time in epoch milli seconds for the plotting
    epoch_seconds = Date.parse(data_row[0]).to_time.to_i * 1000
    Struct::Price.new epoch_seconds,data_row[1],data_row[2],data_row[3],data_row[4],data_row[5]
  }
}
